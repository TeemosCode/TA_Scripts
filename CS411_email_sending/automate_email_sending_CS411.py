import smtplib
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText

MY_EMAIL_PROVIDER = "smtp.outlook.com"
# Change the following global variables based on your own information
# The first one is just as an example
STUDENT_INFO_FILE = "cs411_Student_info.csv"  # This is used as a CSV file. The following logic handles it as a CSV.
MY_OWN_EMAIL_ADDRESS = "[something]@illinois.edu"
EMAIL_PASSWORD = "[THIS IS MY PASSWORD]"  # Best put this elsewhere and read it in
EMAIL_SUBJECT = "Spring 2020 CS411 Project Track 1 - Assemble!"
MY_NAME = "Roger Ho"
MY_UID = "[something]"
# Personally I would use an additional text file of my choice and read it in instead. Putting this here as reference (Could be further changed to your own needs)
EMAIL_MESSAGE = """
Hi there,
Hope you’re enjoying a great semester! I am {0}, one of the TAs from CS411. As you may know, you are assigned to Group: {1}. (If there are any concerns with your group number, please don't hesitate to contact us!) 
Every project group of students will be assigned a project TA. I will be your project TA for this semester!

Currently TA's need some input from you: 
   Your group members would need to discuss and come to an agreement, **one person per group please let me know [by replying to me and CC ALL your teammates] that you have been elected as your TEAM LEADER**!!

    Here are a few things to note about the team leader:
    1. The team leader will be the primary contact to me on behalf of the group with regards to communication on the project issues.
    2. When emailing me about the project, INCLUDE “#CS411PROJ1 G[id]” in your email TITLE where [id] is your group id. Group id is your TEAM number. For example: “#CS411PROJ G05 team leader elected! scheduling a meeting?”
    3. If you have any question about project idea or how to start on the project, please do not hesitate to contact me. We can schedule a meeting if you wish to discuss.
    4. You can also have private posts on PIAZZA if you have any question about the project that you want more of us to confirm.
    Thank you and hope you all enjoy the rest of this semester!
Cheers,
{0}














































p.s.
This email is generated by a newly developed script. If there are any problems you are experiencing, please feel free to contact me.
"""


class TAEmail:
    def __init__(self):
        self.message_body = ""
        self.own_email_addr = ""
        self.student_email_addr = ""
        self.subject = ""
        # Don't need it for the creation of this scripts purpose. Fill free to use them in the future!
        self.cc = []
        self.target_email_addr_list = []

    def set_own_email(self, email_address):
        self.own_email_addr = email_address

    def set_student_email(self, email_address):
        self.student_email_addr = email_address

    def set_subject(self, subject):
        self.subject = subject

    def set_message_text(self, message_text):
        self.message_body = message_text


class EmailObj:

    def __init__(self, TA_email_obj):
        self.TA_email_obj = TA_email_obj

    def get_mimemultipart_message(self):
        work_email = MIMEMultipart()
        work_email["From"] = self.TA_email_obj.own_email_addr
        work_email["To"] = self.TA_email_obj.student_email_addr
        work_email["Subject"] = self.TA_email_obj.subject
        work_email.attach(MIMEText(self.TA_email_obj.message_body, "plain"))
        return work_email.as_string()


class EmailAction:

    def __init__(self):
        self.email_session = smtplib.SMTP(MY_EMAIL_PROVIDER, 587)

    def run_email_session(self):
        self.email_session.starttls()
        self.email_session.login(MY_OWN_EMAIL_ADDRESS, EMAIL_PASSWORD)
        EmailAction.process_user_automation_code(self)
        self.email_session.quit()
        print("\n===== Finished Sending Email to All students! Closing Email Session! =====")

    def process_user_automation_code(self):
        with open(STUDENT_INFO_FILE) as student_info:
            for line in student_info:
                student_info_split_list = line.split(",")
                if not ''.join(student_info_split_list).strip():
                    continue
                student_info_list = [info.strip() for info in student_info_split_list]
                student_first_name, student_last_name, student_email, student_team_number = student_info_list[0], \
                                                                                            student_info_list[1], \
                                                                                            student_info_list[2], \
                                                                                            student_info_list[3]
                student_name = student_first_name + "," + student_last_name

                TA_email = TAEmail()
                TA_email.set_own_email(MY_OWN_EMAIL_ADDRESS)
                TA_email.set_student_email(student_email)
                TA_email.set_subject(EMAIL_SUBJECT)
                TA_email.set_message_text(EMAIL_MESSAGE.format(MY_NAME, student_team_number))

                email_obj = EmailObj(TA_email)
                message = email_obj.get_mimemultipart_message()

                print("Sending Email to Student ====> Name: {}, "
                      "email: {}, subject: {}, Team Number: {}".format(student_name,
                                                                       TA_email.student_email_addr,
                                                                       TA_email.subject,
                                                                       student_team_number))

                self.email_session.sendmail(TA_email.own_email_addr, TA_email.student_email_addr, message)
                print("Email Sent!...")


if __name__ == "__main__":

    email_session = EmailAction()
    email_session.run_email_session()
